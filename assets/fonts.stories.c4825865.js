var i=Object.defineProperty;var n=(o,t)=>i(o,"name",{value:t,configurable:!0});import"./index.90eb0a03.js";import{c as e,A as c,M as d}from"./Props.5fd9382a.js";import"./jsx-runtime.f954b86b.js";import"./iframe.c1865c25.js";import{T as l}from"./TokensGrid.aa90479a.js";import{b as u}from"./index.75b2c3cd.js";import"./string.0aff4c33.js";import"./index.5a6998c9.js";import"./es.map.constructor.e549a612.js";import"./es.number.to-fixed.e53a41a9.js";function p(){return p=Object.assign?Object.assign.bind():function(o){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var a in s)Object.prototype.hasOwnProperty.call(s,a)&&(o[a]=s[a])}return o},p.apply(this,arguments)}n(p,"_extends");const y={},f="wrapper";function m({components:o,...t}){return e(f,p({},y,t,{components:o,mdxType:"MDXLayout"}),e(d,{title:"Tokens/Fonts",mdxType:"Meta"}),e("h1",null,"Fonts"),e(l,{tokens:u,mdxType:"TokensGrid"}))}n(m,"MDXContent");m.isMDXComponent=!0;const x=n(()=>{throw new Error("Docs-only story")},"__page");x.parameters={docsOnly:!0};const r={title:"Tokens/Fonts",includeStories:["__page"]},T={};r.parameters=r.parameters||{};r.parameters.docs={...r.parameters.docs||{},page:()=>e(c,{mdxStoryNameToKey:T,mdxComponentAnnotations:r},e(m,null))};const k=["__page"];export{k as __namedExportsOrder,x as __page,r as default};
//# sourceMappingURL=fonts.stories.c4825865.js.map
